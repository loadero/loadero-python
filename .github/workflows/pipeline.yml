name: PIPELINE

on:
  push:
    branches: 
      - 'master'
    tags:
      - '*'
  pull_request:
    branches: 
      - 'master'

  workflow_dispatch:

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      source-changed: ${{ steps.filter.outputs.source-changed }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            source-changed:
              - 'loadero_python/**'
              - 'tests/**'

  checks:
    needs: check-changes
    if: ${{ needs.check-changes.outputs.source-changed == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: install requirements
        run: pip install -r requirements.txt

      - name: lint
        run: ./check.sh lint

      - name: format
        run: ./check.sh format

      - name: test
        run: ./check.sh test unit

      - name: generate coverage report
        run: ./check.sh test report

      # - name: comment coverage
      #   uses: coroo/pytest-coverage-commentator@v1.0.2
      #   with:
      #     pytest-coverage: pytest-coverage.txt

  publish:
    needs: checks
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
          cache: 'pip'
        
      - name: install build
        run: python -m pip install build --user
          
      - name: build wheel and source tarball
        run: python -m build --sdist --wheel --outdir dist/ .

      - name: publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.LOADERO_PYTHON_PYPI_API_TOKEN }}

  build-publish-docs:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
          cache: 'pip'

      - name: install requirements
        run: pip install -r requirements.txt

      - name: show branch
        run: git describe

      - name: build docs
        run: |
          cd docs
          make html
          cd ..
          cp -r docs-build/html /tmp

      - name: checkout docs
        uses: actions/checkout@v3
        with:
          ref: docs

      - name: update docs
        run: |
          rm -rf *
          cp -rT /tmp/html .

      - name: commit updates
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git status
          git add .
          git commit -m "generated"
          git push
